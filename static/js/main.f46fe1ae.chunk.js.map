{"version":3,"sources":["store/initialState.js","store/reducers.js","components/Nav/index.js","components/PageWrapper/index.js","pages/Statistics/index.js","components/Map/index.js","pages/Dust/index.js","pages/Temperature/index.js","pages/AirHumidity/index.js","pages/Subscribe/index.js","pages/About/Description.js","pages/About/P2.js","pages/About/Recomendation.js","pages/About/Recomendation2.js","pages/About/index.js","App.js","store/actions.js","index.js"],"names":["initialState","data","reducer","state","action","type","globalData","navItems","id","link","text","Nav","className","map","item","key","exact","to","activeClassName","PageWrapper","children","Statistics","props","dataBak","React","useState","records","setRecords","globaldata","setGlobalData","markerGroup","setMarkerGroup","center","useEffect","undefined","remove","L","setView","mGroup","layerGroup","addTo","tileLayer","attribution","axios","get","then","response","records1","split","filter","elem","JSON","parse","stringify","buttons","onClick","record","clearLayers","work_data","datestring","substring","prepared_data","sensordatavalues","value_type","timestamp","forEach","filtered","sensor","latitude","location","longitude","value","parseFloat","toFixed","toString","obj","index","self","findIndex","t","numberIcon","divIcon","iconSize","popupAnchor","html","marker","icon","prepareData","connect","dataForProcessing","refinedData","Dust","Temperature","AirHumidity","Subscribe","email","setEmail","showExists","setShowExists","showSuccess","setShowSuccess","showMessage","console","log","setTimeout","onSubmit","event","preventDefault","htmlFor","name","onChange","e","target","Description","P2","Recomendation1","Recomendation2","About","Recomendation","dispatch","sendData","basename","window","pathname","path","component","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f46fe1ae.chunk.js","sourcesContent":["const initialState = {\n  data: 0,\n}\n\nexport default initialState\n","import initialState from './initialState'\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SEND_DATA':\n      return {\n        ...state,\n        data: action.globalData,\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n// import Logo from './Logo'\nimport './nav.css'\n\nconst navItems = [\n  { id: 1, link: '/about_us', text: 'ToBreathe' },\n  { id: 2, link: '/', text: 'PM2.5' },\n  { id: 3, link: '/temperature', text: 'Temperature' },\n  { id: 4, link: '/air_humidity', text: 'Air humidity' },\n  { id: 5, link: '/subscribe', text: 'Subscribe' },\n  { id: 6, link: '/statistics', text: 'Statistics' },\n\n\n]\n\n\nfunction Nav() {\n  return (\n    <nav className=\"nav scrollmenu\">\n      {/* <Logo /> */}\n      {\n            navItems.map((item) => (\n              <NavLink\n                key={item.id}\n                exact\n                to={item.link}\n                className=\"navItem\"\n                activeClassName=\"active_link\"\n              >\n                {item.text}\n              </NavLink>\n            ))\n        }\n    </nav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport Nav from '../Nav'\n\n\nfunction PageWrapper({ children }) {\n  return (\n    <div className=\"page-wrapper\">\n      <Nav />\n      {children}\n    </div>\n  )\n}\n\nexport default PageWrapper\n","import React, { useEffect } from 'react'\nimport axios from 'axios'\nimport L from 'leaflet'\nimport PageWrapper from '../../components/PageWrapper'\nimport './statistics.css'\n\nlet map\nfunction Statistics(props) {\n  const stopSignal = 0\n  let data\n  let dataBak\n  const [records, setRecords] = React.useState([])\n  const [globaldata, setGlobalData] = React.useState([])\n  const [markerGroup, setMarkerGroup] = React.useState(0)\n  const center = [42.87, 74.594]\n  const zoom = 12\n  const getData = () => {\n    axios\n      .get('https://krakenflask.herokuapp.com/readnamesfromtemp')\n      .then((response) => {\n        const preRecords = response.data.split('\\n')\n        const records1 = preRecords.filter((elem) => elem !== '')\n        setRecords(records1)\n      })\n    axios\n      .get('https://krakenflask.herokuapp.com/readdatafromtemp')\n      .then((response) => {\n        data = response.data\n        dataBak = JSON.parse(JSON.stringify(data))\n        setGlobalData(dataBak)\n      })\n  }\n\n  useEffect(() => {\n    if (map !== undefined) { map.remove() }\n    map = L.map('map').setView(center, zoom)\n    const mGroup = L.layerGroup().addTo(map)\n    setMarkerGroup(mGroup)\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n    }).addTo(map)\n    getData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stopSignal])\n  const prepareData = (record) => {\n    markerGroup.clearLayers()\n    const work_data = JSON.parse(JSON.stringify(globaldata))\n    const datestring = record.substring(0, 10)\n    const refined_data = work_data.filter(\n      (elem) => elem.sensordatavalues[0].value_type !== 'temperature'\n        && elem.sensordatavalues[0].value_type !== 'humidity',\n    )\n    const prepared_data = refined_data.filter(\n      (elem) => elem.timestamp.substring(0, 10) === datestring,\n    )\n    prepared_data.forEach((elem) => {\n      const filtered = elem.sensordatavalues.filter(\n        (elem) => elem.value_type === 'P2',\n      )\n      elem.sensordatavalues = filtered[0]\n    })\n    const pre_data_to_display = prepared_data.map((elem) => {\n      const data = {\n        id: elem.sensor.id,\n        latitude: elem.location.latitude,\n        longitude: elem.location.longitude,\n        value: parseFloat(elem.sensordatavalues.value)\n          .toFixed(2)\n          .toString(),\n      }\n      return data\n    })\n    const data_to_display = pre_data_to_display.filter((\n      obj,\n      index,\n      self,\n    ) => (\n      index\n        === self.findIndex((t) => t.id === obj.id)\n    ))\n    data_to_display.forEach((elem) => {\n      const numberIcon = L.divIcon({\n        className: 'number-icon',\n        iconSize: [35, 35],\n        popupAnchor: [3, -40],\n        html: elem.value,\n      })\n      L.marker([parseFloat(elem.latitude), parseFloat(elem.longitude)], {\n        icon: numberIcon,\n      }).addTo(markerGroup)\n    })\n  }\n  const buttons = records.map((elem) => <button className=\"statistics_btn\" type=\"button\" key={elem} onClick={() => prepareData(elem)}>{elem}</button>)\n\n\n  return (\n    <PageWrapper>\n      <div className=\"mapStat\" id=\"map\" />\n      {buttons}\n    </PageWrapper>\n  )\n}\n\nexport default Statistics\n","import React, { useEffect } from 'react'\r\nimport L from 'leaflet'\r\nimport { connect } from 'react-redux'\r\nimport \"./map.css\"\r\n\r\n\r\nlet map\r\nconst center = [42.87, 74.594]\r\nconst zoom = 12\r\n\r\nfunction Map(props) {\r\n  const prepareData = () => {\r\n    if (data !== 0) {\r\n      // make copy of deeply nested array\r\n      const dataForProcessing = JSON.parse(JSON.stringify(data))\r\n      let refinedData = []\r\n      let filtered = []\r\n      switch (props.type) {\r\n        case 'dust':\r\n          refinedData = dataForProcessing.filter(\r\n            (elem) => elem.sensordatavalues[0].value_type !== 'temperature' && elem.sensordatavalues[0].value_type !== 'humidity',\r\n          )\r\n          refinedData.forEach((elem) => {\r\n            filtered = elem.sensordatavalues.filter(\r\n              (elem) => elem.value_type === 'P2',\r\n            )\r\n            elem.sensordatavalues = filtered[0]\r\n          })\r\n          break\r\n        case 'temperature':\r\n          refinedData = dataForProcessing.filter(\r\n            (elem) => elem.sensordatavalues[0].value_type !== 'P0' && elem.sensordatavalues[0].value_type !== 'P1' && elem.sensordatavalues[0].value_type !== 'P2',\r\n          )\r\n          refinedData.forEach((elem) => {\r\n            filtered = elem.sensordatavalues.filter(\r\n              (elem) => elem.value_type === 'temperature',\r\n            )\r\n            elem.sensordatavalues = filtered[0]\r\n          })\r\n          break\r\n        case 'humidity':\r\n          refinedData = dataForProcessing.filter(\r\n            (elem) => elem.sensordatavalues[0].value_type !== 'P0' && elem.sensordatavalues[0].value_type !== 'P1' && elem.sensordatavalues[0].value_type !== 'P2',\r\n          )\r\n          refinedData.forEach((elem) => {\r\n            filtered = elem.sensordatavalues.filter(\r\n              (elem) => elem.value_type === 'humidity',\r\n            )\r\n            elem.sensordatavalues = filtered[0]\r\n          })\r\n          break\r\n      }\r\n      const preDataToDisplay = refinedData.map((elem) => {\r\n        const data = {\r\n          id: elem.sensor.id,\r\n          latitude: elem.location.latitude,\r\n          longitude: elem.location.longitude,\r\n          value: parseFloat(elem.sensordatavalues.value)\r\n            .toFixed(2)\r\n            .toString(),\r\n        }\r\n        return data\r\n      })\r\n      const dataToDisplay = preDataToDisplay.filter((\r\n        obj,\r\n        index,\r\n        self,\r\n      ) => (\r\n        index\r\n                    === self.findIndex((t) => t.id === obj.id)\r\n      ))\r\n      dataToDisplay.forEach((elem) => {\r\n        const numberIcon = L.divIcon({\r\n          className: 'number-icon',\r\n          iconSize: [35, 35],\r\n          popupAnchor: [3, -40],\r\n          html: elem.value,\r\n        })\r\n        L.marker([parseFloat(elem.latitude), parseFloat(elem.longitude)], {\r\n          icon: numberIcon,\r\n        }).addTo(map)\r\n      })\r\n      map.setView(center, zoom)\r\n    }\r\n  }\r\n  let { data } = props\r\n  useEffect(() => {\r\n    if (map !== undefined) { map.remove() }\r\n    map = L.map('map').setView(center, zoom)\r\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n    }).addTo(map)\r\n    prepareData()\r\n  })\r\n\r\n  return (\r\n    <div className=\"map\" id=\"map\">\r\n      <slot />\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Map)\r\n","import React from 'react'\nimport PageWrapper from '../../components/PageWrapper'\nimport Map from '../../components/Map'\n\n\nfunction Dust() {\n  return (\n    <PageWrapper>\n      <Map type=\"dust\" />\n    </PageWrapper>\n  )\n}\n\nexport default Dust\n","\nimport React from 'react'\nimport PageWrapper from '../../components/PageWrapper'\nimport Map from '../../components/Map'\n\n\nfunction Temperature() {\n  return (\n    <PageWrapper>\n      <Map type=\"temperature\" />\n    </PageWrapper>\n  )\n}\n\nexport default Temperature\n","import React from 'react'\r\nimport PageWrapper from '../../components/PageWrapper'\r\nimport Map from '../../components/Map'\r\n\r\n\r\nfunction AirHumidity() {\r\n  return (\r\n    <PageWrapper>\r\n      <Map type=\"humidity\" />\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default AirHumidity\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport PageWrapper from '../../components/PageWrapper'\r\nimport './subscribe.css'\r\n\r\nfunction Subscribe() {\r\n  const [email, setEmail] = useState('')\r\n  const [showExists, setShowExists] = useState(false)\r\n  const [showSuccess, setShowSuccess] = useState(false)\r\n  const API = 'https://x1cz0kcbm8.execute-api.eu-central-1.amazonaws.com/?method=verifymail'\r\n\r\n  const sendEmail = (event) => {\r\n    event.preventDefault()\r\n    axios\r\n      .get(`${API}&email=${email}`)\r\n      .then((response) => {\r\n        const { data } = response\r\n        showMessage(data)\r\n      })\r\n  }\r\n  const showMessage = (data) => {\r\n    console.log(data)\r\n    switch (data) {\r\n      case 'exists':\r\n        setShowExists(true)\r\n        console.log(showExists)\r\n        setTimeout(() => setShowExists(false), 3000)\r\n        break\r\n      case 'success':\r\n        setShowSuccess(true)\r\n        setTimeout(() => setShowSuccess(false), 3000)\r\n        break\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <div className=\"subscribe_form\">\r\n        <form className=\"subscribe\" onSubmit={sendEmail}>\r\n        <span>If you want to get notifications</span>\r\n          <label htmlFor=\"email\">Enter your email:</label>\r\n          <input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          <input type=\"submit\" value=\"Отправить\" />\r\n        </form>\r\n        {showExists && (\r\n        <p>\r\n          Данный адрес почты уже зарегистрирован\r\n        </p>\r\n        )}\r\n        {showSuccess && (\r\n        <p>\r\n          Ваш адрес почты успешно зарегистрирован.\r\n          Проверьте свой почтовый ящик и подтвердите email.\r\n        </p>\r\n        )}\r\n      </div>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default Subscribe\r\n","import React from 'react'\r\nfunction Description() {\r\n    return (\r\n        <div className=\"about_description project\">\r\n        <h3>О проекте</h3>\r\n        <p>Проект <b>ToBreathe</b> создан для людей, которым небезразлично свое здоровье и экология.\r\n        Здесь вы можете узнать об уровне загрязнения воздуха в вашем районе, а заодно получить информацию\r\n        о температуре и влажности. Измерение PM2.5 в Бишкеке производится прибором AirBeam, который протестирован и одобрен\r\n        Агентством охраны окружающей среды США.\r\n        По нормам ВОЗ среднегодовой уровень РМ2.5 должен составлять не больше 10 мкг/м³, а среднесуточный — не больше 25 мкг/м³.\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Description","import React from 'react'\r\nfunction P2() {\r\n    return (\r\n        <div className=\"about_description P2\"><h3>Что такое PM2.5?</h3>\r\n            <p> Это твердые частицы размером 2,5 микрометра. Представляют собой смесь микроскопических твердых частиц в составе которых могут находиться различные вредные химические вещества.\r\n            Именно PM2.5 считается загрязнителем №1 во всем мире и на его долю приходится самое\r\n            большое количество преждевременных смертей, а также заболеваний легких и сердца.\r\n            PM2.5 считается канцерогеном,\r\n            способным проникать в наиболее глубокие части легких и даже в кровеносные сосуды.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default P2","import React from 'react'\r\nfunction Recomendation1() {\r\n    return (\r\n        <div className=\"about_description recomendation\">\r\n            \r\n            <h3>Как обезопасить себя?</h3>\r\n            <p>\r\n            Если уровень загрязнения в вашем регионе выше нормы, то вы можете:\r\n            </p>\r\n            <ul>\r\n            <li>Носить респиратор</li>\r\n            <li>Установить в жилом/рабочем помещении очиститель и увлажнитель воздуха</li>\r\n            <li>Сократить время пребывания в зоне загрязнения</li>\r\n            <li>Увеличить количество комнатных растений в помещении</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recomendation1","import React from 'react'\r\nfunction Recomendation2() {\r\n    return (\r\n        <div className=\"about_description recomendation2\">\r\n            \r\n            <h3>Как я могу способствовать улучшению экологической ситуации?</h3>\r\n            <ul>\r\n            <li>Отказаться от личного транспорта в пользу общественного или выбрать средством передвижения велосипед</li>\r\n            <li>Перейти на газовое/электро отопление, вместо печного</li>\r\n            <li>Способствовать увеличению зеленых насаждений города</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recomendation2","import React from 'react'\nimport PageWrapper from '../../components/PageWrapper'\nimport Description from './Description'\nimport P2 from './P2'\nimport Recomendation1 from './Recomendation'\nimport Recomendation2 from './Recomendation2'\nimport './about.css'\n\nfunction About() {\n  return (\n    <PageWrapper>\n      <main className=\"about\">\n      <h1>Право на чистый воздух важно так же, как и остальные права человека.</h1>\n        <Description/>\n        <P2/>\n        <Recomendation1/>\n        <Recomendation2/>\n      </main>\n    </PageWrapper>\n\n  )\n}\n\nexport default About\n","import React from 'react'\nimport axios from 'axios'\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Statistics from './pages/Statistics'\nimport Dust from './pages/Dust'\nimport Temperature from './pages/Temperature'\nimport AirHumidity from './pages/AirHumidity'\nimport Subscribe from './pages/Subscribe'\nimport About from './pages/About'\n// import Logo from './components/Nav/Logo'\n// import NotFoundPage from './pages/NotFound'\nimport { sendData } from './store/actions'\n\n\nfunction App(props) {\n  let data\n  const API = 'https://krakenflask.herokuapp.com/readcurrentdata'\n  axios\n    .get(API)\n    .then((response) => {\n      data = response.data\n      props.sendData(data)\n    })\n  return (\n    <BrowserRouter basename={window.location.pathname||''}>\n      <Switch>\n        <Route path=\"/statistics\" component={Statistics} exact />\n        <Route path=\"/subscribe\" component={Subscribe} exact />\n        <Route path=\"/temperature\" component={Temperature} exact />\n        <Route path=\"/\" component={Dust} exact />\n        <Route path=\"/air_humidity\" component={AirHumidity} exact />\n        <Route path=\"/about_us\" component={About} exact />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendData: (data) => dispatch(sendData(data)),\n})\n\nexport default connect(null, mapDispatchToProps)(App)\n","export const sendData = (data) => ({\n  type: 'SEND_DATA',\n  globalData: data,\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport reducer from './store/reducers'\nimport App from './App'\nimport './styles/base.css'\n\nconst store = createStore(reducer, composeWithDevTools())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}